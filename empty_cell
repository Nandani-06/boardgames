#!/bin/bash

# Check if a file was provided
if [ $# -ne 1 ]; then
    echo "Usage: $0 <input_file>"
    exit 1
fi

file="$1"

# Check if file exists
if [ ! -f "$file" ]; then
    echo "File not found: $file"
    exit 1
fi

# Determine delimiter based on file extension
case "${file##*.}" in
    csv|txt) delimiter=";" ;;
    tsv) delimiter=$'\t' ;;
    *) echo "Unsupported file type. Use .csv, .tsv, or .txt"; exit 1 ;;
esac

# Read the header
IFS= read -r header < "$file"
IFS="$delimiter" read -ra columns <<< "$header"
num_columns=${#columns[@]}

# Initialize array for empty cell counts
declare -a empty_counts
for ((i = 0; i < num_columns; i++)); do
    empty_counts[i]=0
done

# Process data rows starting from the second line
tail -n +2 "$file" | while IFS= read -r line || [[ -n "$line" ]]; do
    IFS="$delimiter" read -ra fields <<< "$line"

    for ((i = 0; i < num_columns; i++)); do
        val="${fields[i]}"
        # Remove spaces and carriage returns
        val="${val//$'\r'/}"
        val="${val// /}"
        if [[ -z "$val" ]]; then
            ((empty_counts[i]++))
        fi
    done
done

echo "Running empty_cells on the complete dataset, $file, the following counts are reported:"

# Print result
for ((i = 0; i < num_columns; i++)); do
    col="${columns[i]}"
    col="${col//$'\r'/}"  # Remove any carriage return
    echo "$col: ${empty_counts[i]}"
done

