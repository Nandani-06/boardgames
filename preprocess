#!/bin/bash

# preprocess: Clean BGG dataset file by converting separators, fixing formatting, and normalizing data.

# Check if an input file is provided
if [ -z "$1" ]; then
  echo "Usage: $0 <input_file>"
  exit 1
fi

input_file="$1"

# Validate file exists
if [ ! -f "$input_file" ]; then
  echo "Error: File not found: $input_file"
  exit 1
fi

# Generate base name for output file
file_base_name=$(basename "$input_file" | sed 's/\.[^.]*$//')
output_file="${file_base_name}.tsv"

# Determine separator based on extension
case "$input_file" in
  *.txt) separator=";" ;;
  *.csv) separator="," ;;
  *.tsv) separator=$'\t' ;;
  *) echo "Error: Unsupported file extension. Use .txt, .csv, or .tsv"; exit 1 ;;
esac

# Step 1: Convert separator to tab and remove Windows line endings (\r)
if [ "$separator" != $'\t' ]; then
  # Replace separator with tabs, strip \r
  # Use awk instead of sed to avoid escaping separator issues
  awk -v sep="$separator" 'BEGIN{FS=sep; OFS="\t"} {gsub(/\r/, ""); print}' "$input_file" > "$output_file"

else
  tr -d '\r' < "$input_file" > "$output_file"
fi

# Step 2: Change format of floating-point numbers from ',' to '.'
# Applies only to numeric fields, but here we broadly replace all ',' with '.' assuming safe context
# You can scope this better if needed (e.g. regex to match numbers)
sed -i 's/,/./g' "$output_file"

# Step 3: Remove non-ASCII characters
# This strips characters outside printable ASCII
tr -cd '\11\12\40-\176' < "$output_file" > "temp_output.tsv"
mv "temp_output.tsv" "$output_file"

# Step 4: Handle missing IDs (first column); assign new unique IDs
# Find the largest numeric ID in the first column
largest_id=$(awk -F'\t' 'NR>1 && $1 ~ /^[0-9]+$/ {if($1+0 > max) max=$1+0} END {print max+0}' "$output_file")
next_id=$((largest_id + 1))

awk -F'\t' -v next_id="$next_id" 'BEGIN {OFS=FS}
  NR == 1 {print; next}
  {
    if ($1 == "") {
      $1 = next_id++
    }
    print
  }
' "$output_file" > "temp_output.tsv"

mv "temp_output.tsv" "$output_file"

echo "Preprocessing complete. Output saved to: $output_file"

